// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Package.Infrustructure.Persistence.Context;

#nullable disable

namespace Package.Infrustructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250929142841_CreateCompareRowVersionFunc")]
    partial class CreateCompareRowVersionFunc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("base")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Package.Domain.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxItems")
                        .HasColumnType("int");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Subscriptions", "base");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxItems = 10,
                            Plan = "enterprise",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MaxItems = 5,
                            Plan = "pro",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            MaxItems = 12,
                            Plan = "enterprise",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            MaxItems = 4,
                            Plan = "free",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            MaxItems = 20,
                            Plan = "pro",
                            UserId = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
